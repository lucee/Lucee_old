<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE taglib PUBLIC "-//Lucee//DTD CFML Tag Library 1.0//EN"
	"dtd/web-cfmtaglibrary_1_0.dtd">
<taglib>
	<tlib-version>1.0</tlib-version>
	<cfml-version>1.0</cfml-version>
	<short-name>tbase</short-name>
	<uri>http://www.lucee.org/cf-tld-3-1</uri>
	<display-name>Lucee Core Tag Library</display-name>
	<description></description>
	<name-space>cf</name-space>
	<name-space-separator/>
	<ignore-unknow-tags>false</ignore-unknow-tags>
	<el>
		<el-class>lucee.transformer.cfml.expression.CFMLExprTransformer</el-class>
	</el>

<!-- ajaximport -->
	<tag>
		<name>ajaximport</name>
		<tag-class>lucee.runtime.tag.AjaxImport</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Controls the JavaScript files that are imported for use on pages that use ColdFusion AJAX tags and features.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>cssSrc</name>
			<required>no</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<type>string</type>
			<name>scriptSrc</name>
			<required>no</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<type>string</type>
			<name>tags</name>
			<required>no</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<!-- ajaxProxy -->
	<tag>
		<name>ajaxProxy</name>
		<tag-class>lucee.runtime.tag.AjaxProxy</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Creates a JavaScript proxy for a ColdFusion component, for use in an AJAX client. Alternatively, creates a proxy for a single CFC method, JavaScript function, or URL that is bound to one or more control attribute values.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>bind</name>
			<required>no</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cfc</name>
			<required>no</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<type>string</type>
			<name>jsClassName</name>
			<required>no</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onError</name>
			<required>no</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onSuccess</name>
			<required>no</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	
	
	<!-- Applet -->
	<tag>
		<name>applet</name>
		<tag-class>lucee.runtime.tag.Applet</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<status>deprecated</status>
		<description>
			Used in a cfform tag, cfapplet lets you reference custom Java applets that you have registered
			using the Lucee Administrator.
		</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>appletSource</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of the registered applet.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The form variable name for the applet.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>height</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The height of the applet, in pixels.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>width</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The width of the applet, in pixels.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>vSpace</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Space above and below applet, in pixels.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>hSpace</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Space on each side of the applet, in pixels.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>align</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Alignment</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>notSupported</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The text to display if a page containing a Java applet-based cfform control is opened by a browser that does not support Java or has Java support disabled.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>paramn</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of a registered parameter for the applet. </description>
		</attribute>
	</tag>
	
	
	<!-- Application-->
	<tag>
		<name>application</name>
		<tag-class>lucee.runtime.tag.Application</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<script>
			<type>multiple</type>
			<rtexprvalue>true</rtexprvalue>
		</script>
		<description>
			Defines scoping for a application, enables or disables storing client variables,
			and specifies a client variable storage mechanism.
			By default, client variables are disabled. Also, enables session variables and sets timeouts
			for session and application variables. Session and application variables are stored in memory.
		</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of your application. This name can be up to 64 characters long.
   		Required for application and session variables, optional for client variables</description>
		</attribute>
		<attribute>
			<type>object</type>
			<name>datasource</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>alias for default datasource</description>
		</attribute>
		<attribute>
			<type>object</type>
			<name>defaultdatasource</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>the default datasource for this environment</description>
		</attribute>
		<attribute>
			<type>struct</type>
			<name>datasources</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A structure that contains datasources defintions.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>action</name>
			<values>create,update</values>
			<default-value>create</default-value>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>action for the data set:
			- create (default): creates a new application context and overwrite the existing
			- update: update the existing application context when there is already one, otherwise a new one is created</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>loginStorage</name>
			<values>cookie,session</values>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>
			storage for the login data:
			- cookie: store login information in the Cookie scope
			- session: store login information in the Session scope
			</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>clientManagement</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. Enables client variables. Default is No.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>clientStorage</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>
Specifies how Lucee stores client variables:
- memory: the session is only kept in memory
- cookie: the session is stored in the client cookie
- file (default): the session is stored in a local file
- "datasource-name"|"cache-name": when you select a name of an available datasource or cache, the client scope will be stored in there</description>
		</attribute>

		<attribute>
			<type>string</type>
			<name>sessionType</name>
			<values>cfml,j2ee</values>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
<description>
Lucee provide 2 kind of sessions:
- cfml: session handled by Lucee
- j2ee: session handled by the Servlet Engine used
Default value is defined in the Lucee Web Administrator. "j2ee" can not use a session storage.
</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>sessionStorage</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
<description>
Specifies how Lucee stores session variables:
- memory (default): the session is only kept in memory
- cookie: the session is stored in the client cookie
- file: the session is stored in a local file
- "datasource-name"|"cache-name": when you select a name of an available datasource or cache, the session scope will be stored in there
</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>clientCluster</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>if set to true, lucee uses the storage backend for the client scope as master and Lucee checks for changes in the storage backend with every request,
			if set to false (default), the storage is only used as slave, lucee only initially gets the data from the storage. Ignored for storage type "memory".</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>sessionCluster</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>if set to true, lucee uses the storage backend for the session scope as master and Lucee checks for changes in the storage backend with every request,
			if set to false (default), the storage is only used as slave, lucee only initially gets the data from the storage. Ignored for storage type "memory".</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>setClientCookies</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. Yes enables client cookies. Default is Yes. If you set this attribute to
		"No", Lucee does not automatically send the CFID and CFTOKEN cookies to the client browser;
		you must manually code CFID and CFTOKEN on the URL for every page that uses Session or Client variables.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>cgiReadonly</name>
			<required>false</required>
			<default-value>true</default-value>
			<rtexprvalue>true</rtexprvalue>
			<description>if set to true, the CGI Scope is readonly.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>bufferOutput</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>if set to true (default) the output written to the body of the tag is buffered and in case of a exception also outputted.
			if set to false the content to body is ignored and not disabled when a failure in the body of the tag occur.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>sessionManagement</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. Yes enables session variables. Default is No.</description>
		</attribute>
		<attribute>
			<type>timespan</type>
			<name>sessionTimeout</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Enter the CreateTimeSpan function and values in days, hours, minutes, and seconds, separated
		by commas, to specify the lifespan of session variables. The default value is specified in the
		Variables page of the Lucee Administrator.</description>
		</attribute>
		<attribute>
			<type>timespan</type>
			<name>clientTimeout</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Enter the CreateTimeSpan function and values in days, hours, minutes, and seconds, separated
		by commas, to specify the lifespan of client variables. The default value is specified in the
		Variables page of the Lucee Administrator.</description>
		</attribute>
		<attribute>
			<type>timespan</type>
			<name>applicationTimeout</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Enter the CreateTimeSpan function and values in days, hours, minutes, and seconds, separated
		by commas, to specify the lifespan of application variables. The default value is specified in
		the Variables page of the Lucee Administrator.</description>
		</attribute>
		<attribute>
			<type>timespan</type>
			<name>requestTimeout</name>
			<alias>timeout</alias>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Sets the amount of time Lucee will wait for a request to finish before a request timeout will be raised. This means that the execution of the request will be stopped.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>setDomainCookies</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. Sets the CFID and CFTOKEN cookies for a domain, not just a single host.
		Applications that are running on clusters must set this value to Yes. The default is No.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>scriptProtect</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Specifies whether to protect variables from cross-site scripting attacks</description>
		</attribute>
		<attribute>
			<type>struct</type>
			<name>mappings</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A structure that contains mappings. Each element in the structure consists of a key and a value.
			The logical path is the key and the absolute path is the value.</description>
		</attribute>
		<attribute>
			<type>any</type>
			<name>customtagpaths</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Contains custom tag paths.</description>
		</attribute>
		<attribute>
			<type>any</type>
			<name>componentpaths</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Contains component paths.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>secureJson</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A Boolean value that specifies whether to add a security prefix in front of the value that a function returns in JSON-format
			in response to a remote call.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>wstype</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>webservice type used, this can be one of the following values
- Axis1 (default): The Apache Axis 1 implementation is used
- CXF: The CXF implementation is used</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>typeChecking</name>
			<required>false</required>
			<default-value>true</default-value>
			<rtexprvalue>true</rtexprvalue>
			<description>If disabled, Lucee ignores type defintions with function arguments and return values</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>compression</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Enable compression (GZip) for the Lucee Response stream for text-based responses when supported by the client (Web Browser).</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>suppressRemoteComponentContent</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Suppress content written to response stream when a Component is invoked remotely. Only works if the content was not flushed before.</description>
		</attribute>
		
		
		<attribute>
			<type>string</type>
			<name>secureJsonPrefix</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The security prefix to put in front of the value that a function returns in JSON-format in response to a remote call if the secureJSON setting is true.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>localmode</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Defines how the local scope of a function is invoked when a variable with no scope definition is used (default value set in the Lucee administrator).
- modern: the local scope is always invoked
- classic (CFML standard): the local scope is only invoked when the key already exists in it</description>
		</attribute>

		<attribute>
			<type>struct</type>
			<name>tag</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>tags/attributes default value in the following structure:
#{location:{addtoken=false}}#</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>ormenabled</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Specifies whether ORM should be enabled for the current application context.The default is false.</description>
		</attribute>
		<attribute>
			<type>struct</type>
			<name>ormsettings</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>
A struct that defines all the ORM settings, the following keys are supported:
- autogenmap(default:true): Specifies whether Lucee should automatically generate mapping for the persistent CFCs. If autogenmap=false, mapping should be provided in the form of "{cfc-name}.cfc.hbm.xml" files.
- automanageSession(default:true; not supported yet): Lets you specify if Lucee must manage Hibernate session automatically. If enabled: Lucee manages the session completely. That is, it decides when to flush the session, when to clear the session, and when to close the session. If disabled: The application is responsible for managing flushing, clearing, or closing of the session. The only exception is (in the case of transaction), when the transaction commits, the application flushes the session. Lucee closes the ORM session at the end of request irrespective of this flag being enabled or disabled.
- cacheconfig: Specifies the location of the configuration file that should be used by the secondary cache provider.This setting is used only when secondarycacheenabled=true.
- cacheprovider: Specifies the cache provider that should be used by ORM as secondary cache.
- catalog: Specifies the default Catalog that should be used by ORM.
- cfclocation: Specifies the directory (or array of directories) that should be used by Lucee to search for persistent CFCs to generate the mapping. If cfclocation is set, Lucee looks at only the paths specified in it. If it is not set, Lucee looks at the application directory, its sub-directories, and its mapped directories to search for persistent CFCs.
- datasource: Specifies the data source that should be used by ORM. If it is not specified here, then the data source specified for the application is picked up.
- dbcreate(default:none): Hibernate can automatically create the tables for your application in the database. dbCreate takes the following values:
-- update: Setting this value creates the table if it does not exist or update the table if it exists.
-- dropcreate: Setting this value drops the table if it exists and then creates it.
-- none: Setting this value does not change anything in the database schema.
- dialect: Specifies the dialect.Lucee supports the following dialects: [Cache 2007.1, Cache71, Cache 2007.1, DB2, DB2/390, DB2/400, DB2390, DB2400, DB2AS400, DB2OS390, DataDirectOracle9, Derby, Firebird, FrontBase, H2, H2DB, HSQL, HSQLDB, Informix, Ingres, Interbase, JDataStore, MSSQL, Mckoi, MckoiSQL, MicrosoftSQLServer, Mimer, MimerSQL, MySQL, MySQL/InnoDB, MySQL/MyISAM, MySQL5, MySQL5/InnoDB, MySQL5InnoDB, MySQLInnoDB, MySQLMyISAM, MySQLwithInnoDB, MySQLwithMyISAM, Oracle, Oracle10g, Oracle8i, Oracle9, Oracle9i, Pointbase, PostgreSQL, PostgresPlus, Progress, SAPDB, SQLServer, Sybase, Sybase11, SybaseASE15, SybaseAnywhere, com.ddtek.jdbc.db2.DB2Driver, com.microsoft.jdbc.sqlserver.SQLServerDriver, oracle.jdbc.driver.OracleDriver, org.firebirdsql.jdbc.FBDriver, org.gjt.mm.mysql.Driver, org.h2.Driver, org.hsqldb.jdbcDriver, org.postgresql.Driver]
- eventHandling(default:false): Specifies whether ORM Event callbacks should be given.
- flushatrequestend(default:true): Specifies whether ormflush should be called automatically at request end. If flushatrequestend is false, ormflush is not called automatically at request end.
- logSQL(default:false): Specifies whether the SQL queries that are executed by ORM will be logged. If LogSQL=true, the SQL queries are logged to the console.
- ormconfig: The Hibernate configuration file. This file contains various configuration parameters like, dialect, cache settings, and mapping files that are required for the application. For more details, see www.hibernate.org/hib_docs/reference/en/html/session-configuration.html. The settings defined in the ormsettings override the settings defined in the Hibernate Configuration XML file.The connection information in the Hibernate Configuration XML file is however ignored because Lucee uses its own connection pool. You will need to use this only when you need to use a hibernate setting that is not available using ormsetting.
- savemapping(default:false): Specifies whether the generated Hibernate mapping file has to be saved to disc. If you set the value to true, the Hibernate mapping XML file is saved with the filename "CFC name".hbm.xml in the same directory as the CFC. If any value of savemapping is specified in CFC, it will override the value specified in the ormsetting.
- schema: Specifies the default Schema that should be used by ORM.
- secondarycacheenabled(default:false): Specifies whether secondary caching should be enabled
- skipCFCWithError(default:false;not implemented yet): Lets you specify if Lucee must skip the CFCs that have errors. If set to true, Lucee ignores the CFCs that have errors.
- sqlscript: Path to the SQL script file that gets executed after ORM is initialized. This applies if dbcreate is set to dropcreate. This must be the absolute file path or the path relative to the application.The SQL script file lets you populate the tables before the application is accessed.
- useDBForMapping(default:true): Specifies whether the database has to be inspected to identify the missing information required to generate the Hibernate mapping. The database is inspected to get the column data type, primary key and foreign key information.
</description>
		</attribute>
		<attribute>
			<type>struct</type>
			<name>s3</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>
A struct that defines default S3 settings, this settings can be overwritten as part of the S3 file path, the following keys are supported:
- accessKeyId: S3 access key id
- awsSecretKey: AWS (Amazon Web Service) Secret Key
- defaultLocation(default:us): region for the bucket, possible values are [eu,us,us-west]
- host(default:"s3.amazonaws.com"): hostname of the service
</description>
		</attribute>
		
		<attribute>
			<type>boolean</type>
			<name>triggerDataMember</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>If there is no accessible data member (property, element of the this scope) inside a component, 
			Lucee searches for available matching &amp;quot;getters&amp;quot; or &amp;quot;setters&amp;quot; for the requested property. 
			The following example should clarify this behaviour. 
			&amp;quot;somevar = myComponent.properyName&amp;quot;. 
			If &amp;quot;myComponent&amp;quot; has no accessible data member named &amp;quot;propertyName&amp;quot;, 
			Lucee searches for a function member (method) named &amp;quot;getPropertyName&amp;quot;.</description>
		</attribute>
		
		<attribute>
			<type>boolean</type>
			<name>InvokeImplicitAccessor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>alias for triggerDataMember</description>
		</attribute>
		
		<attribute>
			<type>string</type>
			<name>cacheObject</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used for object caching in this context</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheFunction</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used for function caching in this context</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheQuery</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used for query caching in this context</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheTemplate</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used for template caching in this context</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheResource</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used to store data from ram resource in this context</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheInclude</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used to store data from a include</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheHTTP</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used to store data from a http tag</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheFile</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used to store data from file operations</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cacheWebservice</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name of the cache used to store data from webservice calls</description>
		</attribute>
		<attribute>
			<type>object</type>
			<name>onMissingTemplate</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>closure/udf executed when the requested template does not exist</description>
		</attribute>
		<attribute>
			<type>locale</type>
			<name>locale</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Sets the country/language locale for CFML processing. The locale value
        determines the default format of date, time, number, and
        currency values, according to language and regional
        conventions.</description>
		</attribute>
		<attribute>
			<type>timezone</type>
			<name>timeZone</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>change the timezone defintion for the current application context.</description>
		</attribute>
		<attribute>
			<type>String</type>
			<name>webcharset</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>character set used for output streams, form-, url-, and cgi scope variables and reading/writing the header</description>
		</attribute>
		<attribute>
			<type>String</type>
			<name>resourcecharset</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>character set used for reading from/writing to various resources</description>
		</attribute>
		<attribute>
			<type>String</type>
			<name>scopecascading</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>
Depending on this setting Lucee scans certain scopes to find a variable called from the CFML source. This will only happen, when the variable is called without a scope. (Example: #myVar# instead of #variables.myVar#), the following values are supported:
- strict: scans only the variables scope
- small: scans the scopes variables,url,form
- standard: scans the scopes variables,cgi,url,form,cookie
			</description>
		</attribute>
		
	</tag>
	<!-- Argument -->
	<tag>
		<name>argument</name>
		<tag-class>lucee.runtime.tag.Argument</tag-class>
		<tte-class>lucee.transformer.cfml.evaluator.impl.Argument</tte-class>
		<att-default-value></att-default-value>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Allows subtag data to be saved with the base tag. Applies only to custom tags.</description>
		<attribute-type>mixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of the argument</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>type</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>the type of the argumentany (array, binary, boolean, date, guid, numeric, query, string, struct, uuid)</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>required</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>is argument required or not</description>
		</attribute>
		<attribute>
			<type>any</type>
			<name>default</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>default value of the argument</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>displayname</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name to display (only used by components)</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>hint</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>hint to the argument (only used by components)</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>passby</name>
			<values>reference,value</values>
			<default-value>reference</default-value>
			
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>should the argument passed as reference (default) or as a value</description>
		</attribute>
	</tag>
	
	<!-- Chart -->
	<tag>
		<name>chart</name>
		<tag-class>lucee.runtime.tag.Chart</tag-class>
		<body-content>free</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Generates and displays a chart.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>backgroundColor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Color of the area between the data background and the chart
            border, around labels and around the legend. Hexadecimal
            value or supported named color. For a hex value, use the form:
            textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
            signs or none.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>chartHeight</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Chart height; integer number of pixels</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>chartWidth</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Chart width; integer number of pixels</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>dataBackgroundColor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>color for control. For a hex value, use the form:
            textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
            signs or none.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>font</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Font of data in column.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>fontBold</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes: displays grid control text in bold</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>fontItalic</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes: displays grid control text in italics</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>fontSize</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Size of text in column.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>foregroundColor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>color for control. For a hex value, use the form:
            textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
            signs or none.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>format</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>File format in which to save graph.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>gridlines</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>unimplemented</status>
			<description>Number of grid lines to display on value axis, including
            axis; positive integer.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>labelFormat</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Format for Y-axis labels.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>categoryLabelPositions</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Label postion relative to axis: standard, up_45, up_90, down_45, down_90 or horizontal (standard) and vertical (down_90).  Default is horizontal.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>markerSize</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Size of data point marker. in pixels. Integer.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Page variable name. String. Generates the the graph as
            binary data and assigns it to the specified variable.
            Suppresses chart display. You can use the name value in
            the cffile tag to write the chart to a file.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>pieSliceStyle</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Applies to chartseries type attribute value pie.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>scaleFrom</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Y-axis minimum value; integer</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>scaleTo</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Y-axis max value; integer</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>seriesPlacement</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>unimplemented</status>
			<description>Applies to charts that have more than one data series.
            Relative positions of series.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>show3D</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Display chart with three-dimensional appearance.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>showBorder</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Whether to display a border around the chart</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>showLegend</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>yes: if chart contains more than one data series, display
            legend</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>showMarkers</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Applies to chartseries type attribute values line, curve
            and scatter.
            yes: display markers at data points</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>showXGridlines</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>yes: display X-axis gridlines</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>showXLabel</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>yes: shows the x-axis labels</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>showTooltip</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>show the tooltip or not</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>source</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>variable name of the source path, if set the path to the source file is returned and no image tag is written to response strea.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>showYGridlines</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>yes: display Y-axis gridlines</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>sortXAxis</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Display column labels in alphabetic order along X-axis.
            Ignored if the xAxisType attribute is scale.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>style</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>unimplemented</status>
			<description>XML file or string to use to specify the style of the chart.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>title</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Title of the chart.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>tipbgcolor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>unimplemented</status>
			<description>color for control. For a hex value, use the form:
            textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
            signs or none.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>tipStyle</name>
			<status>unimplemented</status>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Determines the action that opens a popup window to display
            information about the current chart element.
            - mouseDown: display if the user positions the cursor at the element
            and clicks the mouse. Applies only to Flash format graph files (Flash not supported).
            - mouseOver: displays if the user positions the cursor at the element
            - none: suppresses display</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>url</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>URL to open if the user clicks item in a data series; the
            onClick destination page.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>xAxisTitle</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>text; X-axis title</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>xAxisType</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>unimplemented</status>
			<description>
			- category The axis indicates the data category. Data is
            sorted according to the sortXAxis attribute.
            - scale The axis is numeric. All cfchartdata item attribute
            values must numeric. The X axis is automatically sorted
            numerically.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>xOffset</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Applies if show3D="yes". Number of units by which to
            display the chart as angled, horizontally</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>yAxisTitle</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>text; X-axis title</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>yAxisType</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>unimplemented</status>
			<description>Currently has no effect, as Y axis is always used for data
            values. Valid values are category and scale</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>yOffset</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Applies if show3D="yes". Number of units by which to
            display the chart as angled, horizontally.</description>
		</attribute>
	</tag>
	<!-- Chartdata -->
	<tag>
		<name>chartdata</name>
		<tag-class>lucee.runtime.tag.Chartdata</tag-class>
		<tte-class>lucee.transformer.cfml.evaluator.impl.Chartdata</tte-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Used with the cfchart and cfchartseries tags. This tag defines chart data points. Its data is submitted to the cfchartseries tag. </description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>item</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>string; data point name </description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>value</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>number or expression; data point value</description>
		</attribute>
	</tag>
	<!-- Chartseries -->
	<tag>
		<name>chartseries</name>
		<tag-class>lucee.runtime.tag.Chartseries</tag-class>
		<tte-class>lucee.transformer.cfml.evaluator.impl.Chartseries</tte-class>
		<body-content>free</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Used with the cfchart and cfchartseries tags. This tag defines chart data points. Its data is submitted to the cfchartseries tag. </description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>colorlist</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Applies if chartseries type attribute = "pie". Sets pie
            slice colors.

            Comma-delimited list of hex values or supported, named web
            colors; see name list in the cfchart Usage section.

            For a hex value, use the form "##xxxxxx", where x = 0-9 or
            A-F; use two pound signs or none.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>itemColumn</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Name of a column in the query specified in the query
            attribute; contains the item label for a data point to
            graph.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>markerStyle</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Applies to chartseries type attribute values line, curve
            and scatter, and show3D attribute value no.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>paintStyle</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Sets the paint display style of the data series.</description>
		</attribute>
		<attribute>
			<type>any</type>
			<name>query</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Name of CFML query from which to get data.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>seriesColor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Color of the main element (such as the bars) of a chart.
            For a pie chart, the color of the first slice.

            Hex value or supported named color; see name list in the
            cfchart Usage section.
            For a hex value, use the form "##xxxxxx", where x = 0-9 or
            A-F; use two pound signs or none.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>seriesLabel</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Text of data series label</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>type</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Sets the chart display style</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>valueColumn</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Name of a column in the query specified in the query
            attribute; contains data values to graph.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>dataLabelStyle</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Specifies the way in which the color is applied to the
            item in the series:
             - None = nothing is printed (default)
             - Value = the value of the datapoint
             - Rowlabel = the row's label
             - Columnlabel = the column's label
             - Pattern</description>
		</attribute>
	</tag>
	<!-- Col -->
	<tag>
		<name>col</name>
		<tag-class>lucee.runtime.tag.Col</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Defines table column header, width, alignment, and text. Used only inside a cftable.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>header</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The text for the column's header.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>width</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The width of the column in characters (the default is 20). If the length of the data displayed exceeds the width value,
		the data is truncated to fit.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>align</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Column alignment, Left, Right, or Center.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>text</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Double-quote delimited text that determines what displays in the column. The rules for the text
		attribute are identical to the rules for cfoutput sections; it can consist of a combination of
		literal text, HTML tags, and query record set field references. You can embed hyperlinks, image
		references, and input controls in columns.</description>
		</attribute>
	</tag>

	<!-- Div -->
	<tag>
		<name>Div</name>
		<tag-class>lucee.runtime.tag.Div</tag-class>
		<body-content>free</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<status>unimplemented</status>
		<description>Creates an HTML div tag or other HTML container tag and lets you use asynchronous form submission or a bind expression to dynamically control the tag contents.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>bind</name>
			<required>no</required>
			<rtexprvalue>true</rtexprvalue>
			<description></description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>bindOnLoad</name>
			<required>no</required>
			<rtexprvalue>true</rtexprvalue>
			<description></description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>id</name>
			<required>no</required>
			<rtexprvalue>true</rtexprvalue>
			<description></description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onBindError</name>
			<required>no</required>
			<rtexprvalue>true</rtexprvalue>
			<description></description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>tagName</name>
			<required>no</required>
			<rtexprvalue>true</rtexprvalue>
			<description></description>
		</attribute>
	</tag>
	
	
	<!-- Error -->
	<tag>
		<name>error</name>
		<tag-class>lucee.runtime.tag.Error</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<script>
			<type>multiple</type>
			<rtexprvalue>true</rtexprvalue>
		</script>
		<description>Enables the display of customized HTML pages when errors occur. This lets you maintain a
  consistent look and feel within your application, even when errors occur.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>type</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The type of error that the custom error page handles.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>Template</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The relative path to the custom error page.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>mailTo</name>
			<status>deprecated</status>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The e-mail address of the administrator to notify of the error. The value
	is available to your custom error page in the MailTo property of the error object.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>exception</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Type of exception. Required if type = "exception" or "monitor".</description>
		</attribute>
	</tag>
	
	<!-- Function -->
	<tag>
		<name>function</name>
		<tag-class>lucee.runtime.tag.Function</tag-class>
		<tte-class>lucee.transformer.cfml.evaluator.impl.Function</tte-class>
		<ttt-class>lucee.transformer.bytecode.statement.tag.TagFunction</ttt-class>
		<att-default-value></att-default-value>
		<!-- <tdbt-class>lucee.transformer.cfml.script.CFMLScriptTransformer</tdbt-class> -->
		<body-content>must</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Defines table column header, width, alignment, and text. Used only inside a cftable.</description>
		<att-class>lucee.transformer.cfml.attributes.impl.Function</att-class>
		<attribute-type>mixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A string; a component method that is used within the cfcomponent tag.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>returnType</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>String; a type name; data type of the function return value</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>bufferoutput</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>this attribute is only used when output of the function is set to false. if this attribute is set to true (default) the output written to the body of the function is buffered and in case of a exception also outputted.
			if set to false the content to body is ignored and not disabled when a failure in the body of the tag occur.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>roles</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>This attribute is used only for a component. If this attribute is omitted, all roles can invoke the method.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>access</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>This attribute is used only for a component.
The client security context from which the method can be invoked</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>output</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>This attribute is used only for a component.

yes: the function is processed as if it were within a cfoutput tag
no: the function is processed as if it were within a cfsilent tag </description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>displayname</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Display Name of the Function</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>hint</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Hint of the Function</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>abstract</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>is the function abstract or not, abstract functions are only allowed inside interface or component tags</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>description</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Supplies a short text description of the function.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>returnFormat</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The format in which to return values to a remote caller.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>description</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Supplies a short text description of the function.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>secureJson</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A Boolean value that specifies whether to add a security prefix in front of any value that the function returns in JSON-format in response to a remote call.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>verifyClient</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A Boolean value that specifies whether to require remote function calls to include an encrypted security token. For use with AJAX applications only.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>localMode</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Defines how the local scope of this function is invoked when a variable with no scope definition is used.  Accepted values include:  

- classic (default): The local scope is only invoked when the key already exists in it.
- modern: The local scope is always invoked.</description>
		</attribute>
		
		<attribute>
			<type>object</type>
			<name>cachedWithin</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>
possible values are:
String "request": If original content was created within the current request, cached content data isused.
a timespan (created with function CreateTimeSpan): If original content date falls within the time span, cached content data isused. 

To use cached data, the function must be called with the exact same arguments.</description>
    </attribute>
	</tag>
	<!-- Header -->
	<tag>
		<name>Header</name>
		<tag-class>lucee.runtime.tag.Header</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<script>
			<type>multiple</type>
			<rtexprvalue>true</rtexprvalue>
		</script>
		<description>Generates custom HTTP response headers to return to the client.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A name for the header.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>value</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A value for the HTTP header. This attribute is used in conjunction with the name attribute.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>statusCode</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A number that sets the HTTP status code.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>charset</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The character encoding in which to encode the header value.

            For more information on character encodings, see:
            www.w3.org/International/O-charset.html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>statusText</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Text that explains the status code. This attribute is used in conjunction with the
	statusCode attribute.</description>
		</attribute>
	</tag>
	<!-- Login -->
	<tag>
		<name>login</name>
		<tag-class>lucee.runtime.tag.Login</tag-class>
		<allow-removing-literal>yes</allow-removing-literal>
		<body-content>must</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<script>
			<type>multiple</type>
			<rtexprvalue>true</rtexprvalue>
		</script>
		<description>A container for user login and authentication code.
		Lucee runs the code in this tag if a user is not already logged in.
		You put code in the tag that authenticates the user and identifies the user with a set of roles. Used with cfloginuser tag.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>number</type>
			<name>idletimeout</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description>Time interval, in seconds, after which Lucee logs off the user.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>applicationtoken</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description>The login that applies to the application. To let users log in to only one application, specify a unique value for that application. To let users log in to multiple applications, specify the same value for those applications. If you do not set a value for the applicationtoken attribute, the default value is CFAUTHORIZATION_applicationname.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>cookiedomain</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description>Domain of the cookie that is used to mark a user as logged in. Use this attribute to enable a user login cookie to work with multiple clustered servers in the same domain.</description>
		</attribute>
	</tag>
	<!-- Loginuser -->
	<tag>
		<name>loginuser</name>
		<tag-class>lucee.runtime.tag.Loginuser</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<script>
			<type>multiple</type>
			<rtexprvalue>true</rtexprvalue>
		</script>
		<description>Identifies an authenticated user to ColdFusion. Specifies the user ID and roles. Used within a cflogin tag.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The Name of the User</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>password</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The Password of the User</description>
		</attribute>
		<attribute>
			<type>any</type>
			<name>roles</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The Roles of the User</description>
		</attribute>
	</tag>
	<!-- Logout -->
	<tag>
		<name>logout</name>
		<tag-class>lucee.runtime.tag.Logout</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<script>
			<type>single</type>
			<rtexprvalue>true</rtexprvalue>
		</script>
		<description>Logs the current user out. Removes knowledge of the user ID, password, and roles from the server.
		If you do not use this tag, the user is automatically logged out when the session ends.</description>
		<attribute-type>fixed</attribute-type>
	</tag>
	<!-- NTauthenticate -->
	<tag>
		<name>NTAuthenticate</name>
		<tag-class>lucee.runtime.tag.NTAuthenticate</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<status>unimplemented</status>
		<description>Authenticates a user name and password against the Windows NT domain on which the ColdFusion server is running, and optionally retrieves the user's groups.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>username</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>User's login name.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>password</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>User's login name.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>domain</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Domain against which to authenticate the user. The
            server must be running on this domain.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>result</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Name of the variable in which to return the results.
            Default: cfntauthenticate</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>listGroups</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Boolean value specifying whether to Include a
            comma-delimited list of the user's groups in the
            result structure.
            Default: false</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>throwOnError</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Boolean value specifying whether to throw an
            exception if the validation fails. If this attribute is true,
            Lucee throws an error if the user name or password is
            invalid; the application must handle such errors in a
            try/catch block or Lucee error handler page.
            Default: false</description>
		</attribute>
	</tag>
	<!-- Object -->
	<tag>
		<name>Object</name>
		<tag-class>lucee.runtime.tag.ObjectTag</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Lets you call methods in COM, CORBA, and JAVA objects.</description>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>name for the instantiated component.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>component</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Name of component to instantiate.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>type</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The object type. You can omit this attribute or specify component. Lucee automatically sets the type to component.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>action</name>
			<values>create,connect</values>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>
- create: instantiates a COM object (typically, a DLL) before invoking methods or properties.
- connect: connects to a COM object (typically, an EXE) running on server.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>class</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Component ProgID for the object to invoke. When using Java stubs to connect to the COM object, the class must be the ProgID of the COM object.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>context</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>-  inproc
    - local
    - remote

In Windows, if not specified, uses Registry setting.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>delimiters</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>if specified a classpath, use as delimiter for the entries, default is comma.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>server</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Server name, using Universal Naming Convention (UNC) or Domain Name Serve (DNS) convention, in one of these forms:

    * \\lanserver
    * lanserver
    * http://www.servername.com
    * www.servername.com
    * 127.0.0.1</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>locale</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>
Sets arguments for a call to init_orb. Use this attribute only for VisiBroker ORBs. It is available on C++, Version 3.2. The value must be in the form:
locale = " -ORBagentAddr 199.99.129.33 -ORBagentPort 19000"

Each type-value pair must start with a hyphen.</description>
		</attribute>

		<!-- webservice -->
		<attribute>
			<type>string</type>
			<name>webservice</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The absolute URL of the web service.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>username</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The user name to use to access the web service. If the webservice attribute specifies a web service configured name in the Lucee Administrator, overrides any user name specified in the Administrator entry.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>password</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The password to use to access the web service. If the webservice attribute specifies a web service name configured in the Lucee Administrator, overrides any password specified in the Administrator entry.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>proxyServer</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The proxy server required to access the web service URL.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>proxyPort</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The port to use on the proxy server.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>proxyUser</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The user ID to send to the proxy server.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>proxyPassword</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The user's password on the proxy server.</description>
		</attribute>
	</tag>
	
	
	<!-- Tree -->
	<tag>
		<name>tree</name>
		<tag-class>lucee.runtime.tag.Tree</tag-class>
		<body-content>must</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<status>unimplemented</status>
		<description>This Tag is not supported yet.
		Lets you put a tree control in a cfform. Validates user selections. Tree items are created with
  cftreeitem tags inside the cftree tag block. You can use a CFML query to supply data to the tree.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A name for the cftree control.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>required</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. Whether user must select an item in the tree control. Default is No.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>delimiter</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The character used to separate elements in the form variable path.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>completepath</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes passes the root level of the treename.path form variable when the cftree is submitted. If
	omitted or No, the root level of this form variable is not included. You must set this attribute to
	Yes for the preserveData attribute of cfform to work with the tree.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>appendkey</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. When used with href, Yes passes the CFTREEITEMKEY variable along with the value of
	the selected tree item in the URL to the application page specified in the cfform action attribute.
	The default is Yes.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onValidate</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of a valid JavaScript function used to validate user input. The form object, input
	object, and input object value are passed to the specified routine, which should return true if
	validation succeeds and false otherwise.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>message</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Message text to appear if validation fails.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onError</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of a JavaScript function to execute in the event of a failed validation.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>lookAndFeel</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Stylistic choice for the slider.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>font</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Font name to use for data in the tree control.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>fontSize</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Font size for text in the tree control, in points.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>italic</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. Yes displays tree control text in italic. Default is No.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>bold</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. Yes displays tree control text in boldface. Default is No.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>height</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Height of the tree control, in pixels.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>width</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Width of the tree control, in pixels.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>vSpace</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Vertical margin spacing above and below the tree control, in pixels.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>align</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Alignment value.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>border</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Places a border around the tree. Default is Yes.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>hScroll</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Permits horizontal scrolling. Default is Yes.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>vScroll</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Permits vertical scrolling. Default is Yes.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>notSupported</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Text to display if the page containing a Java applet-based cfform control is opened by a
	browser that does not support Java or has Java support disabled.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onBlur</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Flash only: ActionScript that runs when the calendar loses focus.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onFocus</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Flash only: ActionScript that runs when the calendar loses focus.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>format</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>- applet: displays the tree using a Java applet in the
              browser,
            - flash: displays the tree using a Flash control
            - object: returns the tree as a Lucee structure with the
              name specified by the name attribute, For details of the
              structure contents, see "object format", below.
            - xml: Generates an XMLrepresentation of the tree.
              In XML format forms, includes the generated XML in the
              form. and puts the XML in a string variable with the name
              specified by the name attribute.
            Default: applet</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onChange</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Flash only: ActionScript to run when the control changes due to user action.
            If you specify an onChange event handler, the Form scope of
            the Lucee action page does not automatically get
            information about selected items. The ActionScript onChange
            event handler must handle all changes and selections.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>style</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Flash only: Must be a style specification in CSS format, with the same
            syntax and contents as used in Macromedia Flex for the
            corresponding Flash element.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>tooltip</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Flash only: Text to display when the mouse pointer
            hovers over the control.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>visible</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Flash only: Boolean value specifying whether to
            show the control. Space that would be occupied by an
            invisible control is blank.
            Default: true</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>enabled</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Flash only: Boolean value specifying whether the
            control is enabled. A disabled control appears in light gray.
            Default: true</description>
		</attribute>
	</tag>
	<!-- TreeItem -->
	<tag>
		<name>TreeItem</name>
		<tag-class>lucee.runtime.tag.TreeItem</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<status>unimplemented</status>
		<description>Populates a tree control, created with cftree, with elements. You can use the img values
  supplied with CFML or reference your own icons.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>value</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Value passed when the cfform is submitted. When populating a cftree with data from a
	cfquery, columns are specified in a comma-separated list.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>display</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The label for the tree item. Default is value. When populating a cftree with data from a
	cfquery, display names are specified in a comma-separated list.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>parent</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Value for tree item parent.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>img</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Image name or filename for the tree item. When populating a cftree with data from a cfquery,
	images or filenames for each level of the tree are specified in a comma-separated list.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>imgopen</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Icon displayed with open tree item. You can specify the icon filename using a relative path.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>href</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>URL to associate with the tree item or a query column for a tree that is populated from a query.
	If href is a query column, the href value is the value populated by the query. If href is not
	recognized as a query column, it is assumed that the href text is an actual HTML href.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>target</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Target attribute for href URL. When populating a cftree with data from a cfquery, targets are specified in a
	comma-separated list.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>query</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Query name used to generate data for the treeitem.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>queryAsRoot</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. Defines specified query as the root level. As in Example 1, this option avoids
	having to create an additional parent cftreeitem. If you specify a text string other than Yes or
	No, the tag uses the text as the root text.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>expand</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. Yes expands tree to show tree item children. No keeps tree item collapsed.
	Default is Yes</description>
		</attribute>
	</tag>
	<!-- Slider -->
	<tag>
		<name>Slider</name>
		<tag-class  >lucee.runtime.tag.Slider</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Used inside cfform, cfslider lets you place a slider control in a CFML form. A slider
  control is like a sliding volume control. The slider groove is the area over which the slider moves.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A name for the cfslider control.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>label</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A label that displays with the slider control.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>refreshLabel</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. If Yes, the label is not refreshed when the slider is moved. Default is Yes.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>range</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The values of the left and right slider range. The slider value displays as the slider is moved.
    Separate values by a comma.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>scale</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Unsigned integer. Defines the slider scale within the value of range.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>value</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The starting slider setting. Must be within the values specified in range. Defaults to the
		minimum value specified in range.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onValidate</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of a valid JavaScript function used to validate user input; in this case,
		a change to the default slider value.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>message</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Message text to appear if validation fails.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onError</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of a valid JavaScript function to execute in the event of a failed validation.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>height</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Height of the slider control, in pixels.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>width</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Width of the slider control, in pixels.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>vSpace</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Vertical margin spacing above and below slider control, in pixels.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>hSpace</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Horizontal margin spacing to the left and right of slider control, in pixels.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>align</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Alignment value.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>tickMarkMajor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes to render major tickmarks in the slider scale. </description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>tickMarkMinor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes to render minor tickmarks in the slider scale. </description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>tickMarkImages</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>image used for tickmarks</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>tickMarkLabels</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>label used for tickmarks</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>lookAndFeel</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A stylistic choice for the slider.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>vertical</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes renders the slider in the browser vertically. No renders the slider horizontally.
	This is the default.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>bgColor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Background color of slider label. See textColor for color options.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>textColor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Slider label text color. Valid entries are: black, magenta,
	cyan, orange, darkgray, pink, gray, white, lightgray, yellow.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>font</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Font name for label text.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>fontSize</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Font size for label text measured in points.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>italic</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes for italicized label text, No for normal text. Default is No.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>bold</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Enter Yes for bold label text, No for medium text. Default is No.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>notSupported</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The text to display if a page containing a Java applet-based cfform control is opened by a
		browser that does not support Java or has Java support disabled.</description>
		</attribute>
	</tag>
	
	<!-- Registry -->
	<tag>
		<name>registry</name>
		<tag-class>lucee.runtime.tag.Registry</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Reads, writes, and deletes keys and values in the system registry. The cfregistry tag is supported
  on all platforms, including Linux, Solaris, and HP-UX.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>action</name>
			<values>getAll,get,set,delete</values>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>action to the registry</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>branch</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Name of a registry branch.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>type</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>string: return string values
dWord: return DWord values
key: return keys
any: return keys and values </description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>variable</name>
			<alias>name</alias>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Name of record set to contain returned keys and values.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>sort</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Sorts query column data (case-insensitive). Sorts on Entry, Type, and Value columns as text. Specify a combination of columns from query output, in a comma-delimited list. For example:
sort = "value desc, entry asc"

asc: ascending (a to z) sort order
desc: descending (z to a) sort order
</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>entry</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Registry value to access.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>variable</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Variable into which to put value.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>value</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Value data to set. If you omit this attribute, cfregistry creates default value, as follows:

string: creates an empty string: ""
dWord: creates a value of 0 (zero)</description>
		</attribute>
	</tag>
	
	<!-- Output -->
	<tag>
		<name>Output</name>
		<tag-class>lucee.runtime.tag.Output</tag-class>
		<tte-class>lucee.transformer.cfml.evaluator.impl.Output</tte-class>
		<ttt-class>lucee.transformer.bytecode.statement.tag.TagOutput</ttt-class>
		<allow-removing-literal>yes</allow-removing-literal>
		<body-content>must</body-content>
		<body-rtexprvalue>true</body-rtexprvalue>
		<description>Displays the results of a database query or other operation. To nest cfoutput tags, see the "Usage" section. </description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>object</type>
			<name>query</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of the cfquery from which to draw data for the output section or the query itself.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>group</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Specifies the query column to use when you group sets of records together. Use this attribute
		if you have retrieved a record set ordered on a certain query column. For example, if a record set is
		ordered according to "CustomerID" in the cfquery tag, you can group the output on "CustomerID." The
		group attribute, which is case sensitive, eliminates adjacent duplicates when the data is sorted by
		the specified field. See the groupCaseSensitive attribute for information about specifying a case
		insensitive grouping.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>groupCaseSensitive</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Boolean indicating whether to group by case. The default value is YES; case is considered while
		grouping. If the query attribute specifies a query object that was generated by a case-insensitive
		SQL query, set the groupCaseSensitive attribute to NO to keep the recordset intact.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>startRow</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Specifies the row from which to start output.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>maxRows</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Specifies the maximum number of rows to display in the output section. You cannot use this attribute together with the attribute endRow.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>endrow</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Last row of query that is included. You cannot use this attribute together with the attribute maxRows.</description>
		</attribute>
	</tag>
	
	<!-- Script -->
	<tag>
		<name>Script</name>
		<tag-class>lucee.runtime.tag.Script</tag-class>
		<tdbt-class>lucee.transformer.cfml.script.CFMLScriptTransformer</tdbt-class>
		<ttt-class>lucee.transformer.bytecode.statement.tag.TagScript</ttt-class>
		<tte-class>lucee.transformer.cfml.evaluator.impl.Script</tte-class>
		<body-content>tagdependent</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Encloses a code segment containing cfscript.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>language</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	
	<!-- Servlet -->
	<tag>
		<name>Servlet</name>
		<tag-class>lucee.runtime.tag.Servlet</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<status>deprecated</status>
		<description>This tag has been deprecated and is non-functional.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>code</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<status>deprecated</status>
			<description>This attribute has been deprecated and is non-functional.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>jrunProxy</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>deprecated</status>
			<description>This attribute has been deprecated and is non-functional.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>timeout</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>deprecated</status>
			<description>This attribute has been deprecated and is non-functional.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>writeOutput</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>deprecated</status>
			<description>This attribute has been deprecated and is non-functional.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>debug</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>deprecated</status>
			<description>This attribute has been deprecated and is non-functional.</description>
		</attribute>
	</tag>
	<!-- ServletParam -->
	<tag>
		<name>ServletParam</name>
		<tag-class>lucee.runtime.tag.ServletParam</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<status>deprecated</status>
		<description>This tag has been deprecated and is non-functional.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<status>deprecated</status>
			<description>This attribute has been deprecated and is non-functional.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>value</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>deprecated</status>
			<description>This attribute has been deprecated and is non-functional.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>variable</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>deprecated</status>
			<description>This attribute has been deprecated and is non-functional.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>type</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>deprecated</status>
			<description>This attribute has been deprecated and is non-functional.</description>
		</attribute>
	</tag>
	
	<!-- Silent -->
	<tag>
		<name>Silent</name>
		<tag-class>lucee.runtime.tag.Silent</tag-class>
		<tte-class>lucee.transformer.cfml.evaluator.impl.Silent</tte-class>
		<!-- removed to have in "getBaseTagList" ttt-class>lucee.transformer.bytecode.statement.tag.TagSilent</ttt-class -->
		<body-content>must</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<handle-exception>true</handle-exception>
		<script>
			<type>single</type>
			<rtexprvalue>true</rtexprvalue>
		</script>
		<description>Suppresses all output that is produced by the CFML within the tag's scope.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>boolean</type>
			<name>bufferoutput</name>
			<script-support>optional</script-support>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<script-support>optional</script-support>
			<description>if set to true (default) the output written to the body of the tag is buffered and in case of a exception also outputted.
			if set to false the content to body is ignored and not disabled when a failure in the body of the tag occur.</description>
		</attribute>
	</tag>

	<!-- Table -->
	<tag>
		<name>Table</name>
		<tag-class>lucee.runtime.tag.Table</tag-class>
		<body-content>must</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<handle-exception>true</handle-exception>
		<description>Builds a table in a CFML page. Use the cfcol tag to define table column and row
  characteristics. The cftable tag renders data either as preformatted text, or, with the HTMLTable
  attribute, as an HTML table. Use cftable to create tables if you don't want to write HTML table tag
  code, or if your data can be well presented as preformatted text.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>query</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Name of the cfquery from which to draw data.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>maxRows</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Maximum number of rows to display in the table.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>colSpacing</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Number of spaces to insert between columns 'default is 2'.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>headerLines</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Number of lines to use for the table header. The default is 2, which leaves one line between
		the headers and the first row of the table.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>HTMLTable</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Renders the table as an HTML 3.0 table.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>border</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Adds a border to the table. Use only when you specify the HTMLTable attribute for the table.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>colHeaders</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Displays headers for each column, as specified in the cfcol tag.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>startRow</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Specifies the query row from which to start processing.</description>
		</attribute>
	</tag>
	
	
	<!-- Form -->
	<tag>
		<name>form</name>
		<tag-class  >lucee.runtime.tag.Form</tag-class>
		<allow-removing-literal>yes</allow-removing-literal>
		<body-content>must</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Builds a form with CFML custom control tags that provide more functionality than standard
  HTML form input elements (XML and Flash type not supported).</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A name for the form you are creating.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>action</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of the page that executed when the form is submitted for processing.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>preserveData</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description>Optional. "Yes" or "No." Specifies whether to display the data that was entered into cfform
		controls in the action page. "Yes" resets the value of the control to the value submitted when the
		form is submitted to itself. This works as expected for the cftextinput and cfslider controls.
		This attribute can be used only if the form and action are on a single page, or if the action page has
		a form that contains controls with the same names as the corresponding controls on the form page.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>enableCAB</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>deprecated</status>
			<description>This attribute has been deprecated and is non-functional.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>target</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of the window or window frame to which the form output is sent.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>method</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>other than post will ignored</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>encType</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The MIME type used to encode data sent by the POST method. The default value is application/x-www-form-urlencoded.
		It is recommended that you accept the default value. This attribute is included for compatibility with
		the HTML form tag.</description>
		</attribute>
		<attribute>
			<type>any</type>
			<name>passThrough</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Used for HTML attributes that are not explicitly supported by cfform. If you specify an
		attribute and value, they are passed to the HTML code that is generated for the cfinput tag.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>codeBase</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>URL for a downloadable JRE plugin (for Internet explorer only). Default is
		/CFIDE/classes/cf-j2re-win.cab.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>archive</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>URL for a downloadable Java classes for controls.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>scriptSrc</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Specifies the URL, relative to the web root, of the
            directory that contains the cfform.js file with the
            client-side JavaScript used by this tag and its child
            tags. For XML format forms, this directory is also the
            default directory for XSLT skins.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>HTML id passed through to form tag created, only used for type html.</description>
		</attribute>

		<attribute>
			<type>string</type>
			<name>onError</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of a JavaScript function that runs if a form submission fails.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onReset</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>JavaScript to execute when the user clicks a reset button.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onLoad</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>JavaScript to execute when the form loads.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onSubmit</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>JavaScript function to execute after other input validation returns. Use this attribute to
		execute JavaScript for preprocessing data before the form is submitted</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>style</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Styles to apply to the form. In HTML or XML format,
            Lucee passes the style attribute to the browser
            or XML. In Flash format, must be a style specification
            in CSS format (XML and Flash type no supported).</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>class</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>format</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>skin</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description></description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>width</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description>The width of the form. Use a number to specify
            pixels, In Flash, you can use a percentage value to
            specify a percentage of the available width.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>height</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description>The height of the form. Use a number to specify
            pixels, In Flash, you can use a percentage value to
            specify a percentage of the available width. The
            displayed height might be less than the specified size.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>preloader</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description>Specifies whether to display a progress bar when
            loading the Flash form. Default is: true.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>timeout</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description>Integer number of seconds for which to keep the
            form data in the Flash cache on the server. A value of
            0 prevents the data from being cached.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>wMode</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description>Specifies how the Flash form appears relative to
            other displayable content that occupies the same
            space on an HTML page.
             - window: The Flash form is the topmost layer on the
            page and obscures anything that would share the
            space, such as drop-down dynamic HTML lists.
             - transparent: The Flash form honors the z-index of
            dhtml so you can float items above it. If the Flash
            form is above any item, transparent regions in the
            form show the content that is below it.
             - opaque: The Flash form honors the z-index of
            dhtml so you can float items above it. If the Flash
            form is above any item, it blocks any content that is
            below it.
            Default is: window.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>accessible</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
		    <description>Specifies whether to include support screen readers
            in the Flash form. Screen reader support adds
            approximately 80KB to the SWF file sent to the
            client. Default is: false.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>accept</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>acceptcharset</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>title</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>dir</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>lang</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onclick</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>ondblclick</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onmousedown</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onmouseup</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onmouseover</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onmousemove</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onmouseout</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onkeypress</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onkeyup</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onkeydown</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
	</tag>


	<!-- Input -->
	<tag>
		<name>input</name>
		<tag-class  >lucee.runtime.tag.Input</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Used inside cfform to place radio buttons, checkboxes, or text boxes. Provides input
  validation for the specified control type.</description>
		<attribute-type>fixed</attribute-type>

		<attribute>
			<type>string</type>
			<name>autosuggest</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Specifies entry completion suggestions to
                    display as the user types into a text input. The
                    user can select a suggestion to complete the text
                    entry.
                    The valid value can be either of the following:
                    - A string consisting of the suggestion values
                    separated by the delimiter specified by the
                    delimiter attribute.
                    - A bind expression that gets the suggestion
                    values based on the current input text.
                    Valid only for cfinput type="text".</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>autosuggestBindDelay</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The minimum time between autosuggest bind
                    expression invocations, in seconds. Use this
                    attribute to limit the number of requests that are
                    sent to the server when a user types.
                    Valid only for cfinput type="text"</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>autosuggestMinLength</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The minimum number of characters required in
                    the text box before invoking a bind expression to
                    return items for suggestion.
                    Valid only for cfinput type="text".</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>delimiter</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The delimiter to use to separate entries in a static autosuggest list. This attribute is meaningful only if the autosuggest attribute is a string of delimited values.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>maxResultsDisplayed</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The maximum number suggestions to display in the autosuggest list.
Valid only for cfinput type="text".</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onBindError</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of a JavaScript function to execute if evaluating a bind expression, including an autosuggest bind expression, results in an error. The function must take two attributes: an HTTP status code and a message.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>showAutosuggestLoadingIcon</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A Boolean value that specifies whether to display an animated icon when loading an autosuggest value for a text input.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>sourceForTooltip</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The URL of a page to display as a tool tip. The page can include HTML markup to control the format, and the tip can include images.
If you specify this attribute, an animated icon appears with the text "Loading..." while the tip is being loaded.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>typeahead</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A Boolean value that specifies whether the autosuggest feature should automatically complete a user's entry with the first result in the suggestion list.
Valid only for cfinput type="text".</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>validateAt</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>How to do the validation; one or more of the following:
            onSubmit, onServer or onBlur.
            onBlur and onSubmit are identical in Flash forms. For
            multiple values, use a comma-delimited list.
            Default: onSubmit</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>type</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>The input control type to create:
            - button: push button.
            - checkbox: check box.
            - file: file selector; not supported in Flash.
            - hidden: invisible control.
            - image: clickable button with an image.
            - password: password entry control; hides input values.
            - radio: radio button.
            - reset: form reset button.
            - submit: form submission button.
            - text: text entry box.
            - datefield: Flash only; date entry field with an
              expanding calendar for selecting dates.</description>
    </attribute>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A name for the form input element.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>value</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>An initial value for the form input element.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>required</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Enter Yes or No. Default is No.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>range</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Enter a minimum and maximum value range, separated by a comma. Valid only for numeric data.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>validate</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>date: verifies format mm/dd/yy.
            eurodate: verifies date format dd/mm/yyyy.
            time: verifies time format hh:mm:ss.
            float: verifies floating point format.
            integer: verifies integer format.
            telephone: verifies telephone format ###-###-####. The
                separator can be a blank. Area code and exchange must
                begin with digit 1 - 9.
            zipcode: verifies, in U.S. formats only, 5- or 9-digit
                format #####-####. The separator can be a blank.
            creditcard: strips blanks and dashes; verifies number using
                mod10 algorithm. Number must have 13-16 digits.
            social_security_number: verifies format ###-##-####. The
                separator can be a blank.
            regular_expression: matches input against pattern
                attribute.</description>
    </attribute>
		<attribute>
			<type>string</type>
			<name>bind</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>A Flash bind expression that populates the field with
            information from other form fields.</description>
    </attribute>
		<attribute>
			<type>string</type>
			<name>bindAttribute</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>Specifies the HTML tag attribute whose value is
                    set by the bind attribute. You can only specify
                    attributes in the browser's HTML DOM tree, not
                    Lucee-specific attributes.
                    Ignored if there is no bind attribute.
                    Valid only for cfinput type="text".</description>
    </attribute>
		<attribute>
			<type>boolean</type>
			<name>bindOnLoad</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>A Boolean value that specifies whether to
                        execute the bind attribute expression when first
                        loading the form.
                        Ignored if there is no bind attribute.
                        Valid only for cfinput type="text".</description>
    </attribute>

		<attribute>
			<type>string</type>
			<name>border</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to input tag created, only used for type html.</description>
    </attribute>
		<attribute>
			<type>string</type>
			<name>accept</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to input tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>accesskey</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to input tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>align</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to input tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>alt</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to input tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>checked</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>Selects a control. No value is required. Applies if
            type=radio or checkbox.
            Default: false</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>daynames</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>A comma-delimited list that sets the names of the
            weekdays displayed in the calendar. Sunday is the
            first day and the rest of the weekday names follow in
            the normal order.
            Default is: S,M,T,W,Th,F,S</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>firstDayOfWeek</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>Integer in the range 0-6 specifying the first day of the
            week in the calendar, 0 indicates Sunday, 6 indicates Saturday.
            Default is: 0</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>monthNames</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>A comma-delimited list of the month names that are
            displayed at the top of the calendar.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>height</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>Applies to most Flash types, HTML image type on
            some browsers. The height of the control, in pixels. The
            displayed height might be less than the specified size.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>width</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>Applies to most Flash types, HTML image type on
            some browsers. The width of the control, in pixels. For
            Flash forms, Lucee ignores this attribute if you also
            specify a size attribute value.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>hspace</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>label</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>Label to put next to the control on a Flash or XML form.
            Not used for button, hidden, image, reset, or submit types.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>mask</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>A mask pattern that controls the character pattern that
            users can enter, or that the form sends to Lucee.
            In HTML and Flash for type=text use:
             - A = [A-Za-z]
             - X = [A-Za-z0-9]
             - 9 = [0-9]
             - ? = Any character
             - all other = the literal character
            In Flash for type=datefield use:
             - D = day; can use 0-2 mask characters.
             - M = month; can use 0-4 mask characters.
             - Y = year; can use 0, 2, or 4 characters.
             - E = day in week; can use 0-4 characters.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>notab</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>datafld</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>datasrc</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>dataformatas</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>disabled</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>Disables user input, making the control read-only. To
            disable input, specify disabled without an attribute or
            disabled="true". To enable input, omit the attribute
            or specify disabled="false".</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>ismap</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>readonly</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>src</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>Applies to Flash button, reset, submit, and image types,
            and the HTML image type. URL of an image to use on
            the button. Flash does not support GIF images.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>usemap</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>title</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>dir</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>lang</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onValidate</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of a JavaScript function used to validate user input. The form object, input object,
	and input object value are passed to the specified routine, which should return true if validation
	succeeds and false otherwise. If used, the validate attribute is ignored.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>pattern</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The JavaScript regular expression pattern to use to validate the input. Required only if you
	specify validate = "regular_expression".</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>message</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Message text to appear if validation fails.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onError</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of a JavaScript function you want to execute in the event of a failed validation.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>size</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The size of the input control. Ignored if type is Radio or Checkbox.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>maxLength</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The maximum length of text entered, if n type is Text.</description>
		</attribute>
		<attribute>
			<type>any</type>
			<name>passThrough</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>
				HTML attributes that are not explicitly supported by cfinput.
				If you specify an attribute and value,
				they are passed to the HTML code generated for the cfinput tag.
			</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>class</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onBlur</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onChange</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onClick</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onDblclick</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onFocus</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onKeyDown</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onKeyPress</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onKeyUp</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onMouseDown</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onMouseMove</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onselect</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onMouseUp</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onMouseOut</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onMouseOver</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>style</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>tabIndex</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>enabled</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		        <status>unimplemented</status>
			<description>Flash only: Boolean value specifying whether the control is
            enabled. A disabled control appears in light gray. The
            inverse of the disabled attribute. Flash only.
            Default: true</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>visible</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description>Flash only: Boolean value specifying whether to show the
            control. Space that would be occupied by an invisible
            control is blank.
            Default: true</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>tooltip</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description>Flash only: Text to display when the mouse pointer hovers
            over the control.</description>
		</attribute>


		<attribute>
			<type>string</type>
			<name>autocomplete</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>HTML attribute: Specifies the types of files that can be submitted through a file upload (only for type="file")</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>autofocus</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Specifies that the input field should have focus on page load (not for type="hidden")</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>form</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>HTML attribute: Specifies one ore more forms the input field belongs to</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>formaction</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>HTML attribute: Overrides the form's action attribute. Must be a valid URL that defines where to send the data when the form is submitted (for type="submit" and type="image")</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>formenctype</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>HTML attribute: Overrides the form's enctype attribute. Specifies how form-data should be encoded before sending it to the server (for type="submit" and type="image")</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>formmethod</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>HTML attribute: Overrides the form's method attribute. Defines the HTTP method for sending data to the action URL (for type="submit" and type="image")</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>formnovalidate</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>HTML attribute: Overrides the form's novalidate attribute. If present the input field should not be validated when submitted</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>formtarget</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>HTML attribute: Overrides the form's target attribute. Specifies the target window used when the form is submitted (for type="submit" and type="image")</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>list</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>HTML attribute: Refers to a datalist containing predefined options for the input field</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>max</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>HTML attribute: Specifies the input field's maximum value. Use together with the "min" attribute to create a range of legal values</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>min</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>HTML attribute: Specifies the input field's minimum value. Use together with the "max" attribute to create a range of legal values</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>multiple</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>HTML attribute: If present the user is allowed more than one value</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>placeholder</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>HTML attribute: Specifies a hint to help users fill out the input field</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>step</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>HTML attribute: Specifies the legal number intervals for the input field</description>
		</attribute>
	</tag>

	<!-- Select -->
	<tag>
		<name>Select</name>
		<tag-class  >lucee.runtime.tag.Select</tag-class>
		<body-content>must</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Used inside cfform, cfselect lets you construct a drop-down list box form control. You can
  populate the drop-down list box from a query, or using the option tag. Use option elements to populate
  lists. The syntax for the option tag is the same as for its HTML counterpart.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>datafld</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
    </attribute>
		<attribute>
			<type>boolean</type>
			<name>caseSensitive</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>is compare for selected case sensitive or not</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>datasrc</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>dataformatas</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>disabled</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>multiple</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<type>string</type>
			<name>title</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>dir</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>lang</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>

		<attribute>
			<type>string</type>
			<name>onmousedown</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>JavaScript to run
            when the user releases a mouse button in the control.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onmouseup</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>JavaScript to run
            when the user presses a mouse button in the control.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onmouseover</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onmousemove</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onmouseout</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onkeypress</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onkeyup</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>JavaScript to run
            when the user releases a keyboard key in the control.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onkeydown</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>JavaScript to run when the user depresses a keyboard
            key in the control.</description>
		</attribute>




		<attribute>
			<type>string</type>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Name of the form you are creating.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>size</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Number of entries in the drop-down list.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>required</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. If Yes, a list element must be selected when the form is submitted, and the size of
		the drop-down list must be at least two. Default is No.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>message</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Message that displays if required = 'Yes' and no selection is made.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onError</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of a valid JavaScript function to execute in the event of a failed validation.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>multiple</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. Yes permits selection of multiple elements in the drop-down list box. The default
		is No.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>query</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Name of the query to be used to populate the drop-down list box.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>selected</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A value matching at least one entry in value to preselect the entry in the drop-down list box.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>value</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The query column value for the list element. Used with the query attribute.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>display</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The query column displayed. Defaults to the value of value. Used with the query attribute.</description>
		</attribute>
		<attribute>
			<type>any</type>
			<name>passThrough</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>HTML attributes that are not explicitly supported by cfselect. If you specify an attribute and
		its value, the attribute and its value are passed to the HTML code that is generated for the cfselect
		tag.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>class</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>ID for form input element.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onBlur</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description></description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onChange</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>JavaScript to run
            when the control changes due to user action.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onClick</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>JavaScript to run when the user clicks the control.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onDblclick</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onFocus</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>style</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Lucee passes the
            style attribute to the browser.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>tabIndex</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>passed through to form tag created, only used for type html.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>label</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		        <status>unimplemented</status>
			<description>Label to put next to the control on a Flash or XML-format form.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>enabled</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Flash only: Boolean value specifying whether to show the control.
            Space that would be occupied by an invisible control is
            blank.
            Default: true</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>group</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Query column to use to group the items in the drop-down
            list into a two-level hierarchical list.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>height</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>unimplemented</status>
			<description>The height of the control, in pixels.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>queryPosition</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>If you populate the options list with a query and use HTML
            option child tags to specify additional entries, determines
            the location of the items from the query relative to the items
            from the option tags:
             - above: Put the query items above the options items.
             - below: Put the query items below the options items.
            Default: above</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>tooltip</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description>Flash only: Text to display when the mouse pointer hovers over the control.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>visible</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		    <status>unimplemented</status>
			<description>Flash only: Boolean value specifying whether to show the control.
            Space that would be occupied by an invisible control is
            blank.
            Default: true</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>width</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>unimplemented</status>
			<description>The width of the control, in pixels.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>editable</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<status>unimplemented</status>
			<description>Boolean value specifying whether you can edit the
                    contents of the control.</description>
		</attribute>
	</tag>

	<!-- Slider -->
	<tag>
		<name>Slider</name>
		<tag-class  >lucee.runtime.tag.Slider</tag-class>
		<body-content>empty</body-content>
		<body-rtexprvalue>false</body-rtexprvalue>
		<description>Used inside cfform, cfslider lets you place a slider control in a CFML form. A slider
  control is like a sliding volume control. The slider groove is the area over which the slider moves.</description>
		<attribute-type>fixed</attribute-type>
		<attribute>
			<type>string</type>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A name for the cfslider control.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>label</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A label that displays with the slider control.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>refreshLabel</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes or No. If Yes, the label is not refreshed when the slider is moved. Default is Yes.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>range</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The values of the left and right slider range. The slider value displays as the slider is moved.
    Separate values by a comma.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>scale</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Unsigned integer. Defines the slider scale within the value of range.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>value</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The starting slider setting. Must be within the values specified in range. Defaults to the
		minimum value specified in range.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onValidate</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of a valid JavaScript function used to validate user input; in this case,
		a change to the default slider value.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>message</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Message text to appear if validation fails.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>onError</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The name of a valid JavaScript function to execute in the event of a failed validation.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>height</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Height of the slider control, in pixels.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>width</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Width of the slider control, in pixels.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>vSpace</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Vertical margin spacing above and below slider control, in pixels.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>hSpace</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Horizontal margin spacing to the left and right of slider control, in pixels.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>align</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Alignment value.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>tickMarkMajor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes to render major tickmarks in the slider scale. </description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>tickMarkMinor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes to render minor tickmarks in the slider scale. </description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>tickMarkImages</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>image used for tickmarks</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>tickMarkLabels</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		<description>label used for tickmarks</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>lookAndFeel</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>A stylistic choice for the slider.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>vertical</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes renders the slider in the browser vertically. No renders the slider horizontally.
	This is the default.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>bgColor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Background color of slider label. See textColor for color options.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>textColor</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Slider label text color. Valid entries are: black, magenta,
	cyan, orange, darkgray, pink, gray, white, lightgray, yellow.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>font</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Font name for label text.</description>
		</attribute>
		<attribute>
			<type>number</type>
			<name>fontSize</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Font size for label text measured in points.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>italic</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Yes for italicized label text, No for normal text. Default is No.</description>
		</attribute>
		<attribute>
			<type>boolean</type>
			<name>bold</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Enter Yes for bold label text, No for medium text. Default is No.</description>
		</attribute>
		<attribute>
			<type>string</type>
			<name>notSupported</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>The text to display if a page containing a Java applet-based cfform control is opened by a
		browser that does not support Java or has Java support disabled.</description>
		</attribute>
	</tag>
	
	
	

</taglib>